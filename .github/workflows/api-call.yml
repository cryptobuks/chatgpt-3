# This is a basic workflow to help you get started with GitHub Actions

name: Fake Video Generator

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  chatgpt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # - name: Parse PROMPT_CHATGPT from TXT file
      #   run: |
      #     echo "PROMPT_CHATGPT=$(cat ./prompt_chatgpt.txt)" >> $GITHUB_ENV
      #     echo "\n PROMPT_CHATGPT: ${{ env.PROMPT_CHATGPT }}"
      # - name: Show prompt
      #   run: echo "The prompt is ${{ env.PROMPT_CHATGPT }}"

      # - name: Call chatgpt API
      #   uses: fjogeleit/http-request-action@v1
      #   id: chatgpt
      #   with:
      #     url: https://api.chatgpt.com
      #     method: POST
      #     contentType: 'application/json'
      #     headers: '{"Authorization": "Bearer ${{ secrets.OPENAI_API_KEY }}"}'
      #     data: '{"prompt": "${{ env.PROMPT_CHATGPT }}"}'
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Call chatgpt API
        id: chatgpt
        run: |
          curl --location --insecure --request POST 'https://api.openai.com/v1/chat/completions' \
            --header "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            --header 'Content-Type: application/json' \
            -d @chatgpt_pmt2.json | jq '.choices[0].message.content'

      - name: Show speaking script
        run: |
          echo "output.body ${{ steps.chatgpt.outputs.body }}"
          echo "output: ${{ steps.chatgpt.outputs }}"


      - name: Print ChatGPT response
        uses: edwardgeorge/jq-action@main
        with:
          input: "${{ steps.chatgpt.outputs }}"
          script: '.choices[0].message.content'